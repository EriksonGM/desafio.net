@model List<DesafioNET.Services.Models.ImportedTransactionResultDTO>
@{
    ViewData["Title"] = "Ficheiro importado";
}

<h1>
    @Model.Count(x => x.Success) de @Model.Count registos importados com sucesso.
</h1>

@foreach (var r in Model)
{
    <div class="card @( r.Success ? "yes" : "not")">
        <span class="row">@r.Row</span>
        <span class="result">@r.Result</span>
        @if (r.Success)
        {
            <span class="data"><strong>Data:</strong> @($"{r.Transaction.EventDate:F}")</span>
            <span class="value"><strong>Valor:</strong> @($"{r.Transaction.TransactionValue:C}")</span>
            <span class="place"><strong>Lugar:</strong> @($"{r.Transaction.PlaceName}")</span>
        }
    </div>
}

@section Style {
    <style>
        .card {
            border: 1px solid #a9a9a9;
            margin-bottom: 15px;
            width: 100%;
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
            grid-template-rows: 1fr 1fr;
            border-radius: 15px;
            padding: 5px
        }

        .row {
            grid-column: 1/5;
            border-bottom: 1px solid #a9a9a9;
            border-right: 1px solid #a9a9a9;
            padding: 5px
        }

        .result {
            grid-column: 5/7;
            border-bottom: 1px solid #a9a9a9;
            padding: 5px
        }

        .data {
            grid-column: 1/3;
            border-right: 1px solid #a9a9a9;
            padding: 5px
        }

        .value {
            grid-column: 3/5;
            border-right: 1px solid #a9a9a9;
            padding: 5px
        }

        .place {
            grid-column: 5/7;
            padding: 5px
        }

        .yes {
            background-color: #eaffdc
        }

        .not {
            background-color: #ffe2dc
        }
    </style>
}




